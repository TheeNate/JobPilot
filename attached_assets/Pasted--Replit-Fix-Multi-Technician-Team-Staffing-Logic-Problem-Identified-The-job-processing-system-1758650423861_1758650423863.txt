# Replit Fix: Multi-Technician Team Staffing Logic

## Problem Identified

The job processing system has a mismatch between job requirements and staffing suggestions:

**Current Behavior:**
- Job parsing correctly identifies technician count (e.g., "2 techs needed")
- AI analysis dropdown only suggests **1 technician** regardless of job requirements
- Missing team composition logic for multi-tech jobs

**Expected Behavior:**
- When job requires multiple technicians, suggest appropriate **team composition**
- Match team size to job requirements
- Consider complementary skills across team members
- Provide team-based reasoning and coordination recommendations

## Root Cause Analysis

**Issue Location**: Claude AI matching service and response formatting

**Current Logic**: 
```typescript
// Returns single "topRecommendation" only
topRecommendation: {
  technician: TechnicianData,
  confidenceScore: number,
  reasoning: string[]
}
```

**Missing Logic**:
- Team size matching against job requirements
- Multi-technician selection algorithms
- Skill distribution across team members
- Team coordination considerations

## Required Fixes

### Fix 1: Update Claude AI Prompt Logic

**File**: `server/services/claude-matching.ts`

**Current Prompt**: Asks for single technician recommendation
**New Prompt**: Should include job technician count and request appropriate team size

**Enhanced Prompt Structure**:
```
Job Requirements: [location, date, job type, TECHS_NEEDED: X]
Available Technicians: [list with certifications and availability]

Task: 
- If TECHS_NEEDED = 1: Recommend single best technician
- If TECHS_NEEDED > 1: Recommend team of X technicians with complementary skills
- Consider skill distribution, experience levels, team dynamics
- Provide team coordination recommendations

Response Format: 
{
  teamSize: number,
  primaryTechnician: { name, role, reasoning },
  additionalTechnicians: [{ name, role, reasoning }],
  teamReasoning: "why this combination works well together",
  coordination: "team leadership and coordination recommendations"
}
```

### Fix 2: Update Response Data Structure

**Current Response Format**:
```typescript
{
  topRecommendation: SingleTechnician,
  alternatives: AlternativeTechnician[]
}
```

**New Response Format**:
```typescript
{
  teamComposition: {
    size: number,
    primary: {
      technician: TechnicianData,
      role: "Lead" | "Specialist" | "Support",
      reasoning: string[]
    },
    additional: [{
      technician: TechnicianData, 
      role: "Lead" | "Specialist" | "Support",
      reasoning: string[]
    }],
    teamDynamics: string,
    coordinationPlan: string
  },
  alternatives: AlternativeTeamComposition[]
}
```

### Fix 3: Frontend UI Updates

**File**: Job table expandable row component

**Current Display**: Shows single technician recommendation
**New Display**: Show team composition with roles

**Enhanced UI Layout**:
```
┌─────────────────────────────────────────────────────────────┐
│ 🤖 AI Analysis for Emergency RT Job (2 techs needed)       │
├─────────────────────────────────────────────────────────────┤
│ Recommended Team (2 technicians):                          │
│                                                             │
│ 👤 Lead Technician: Nate N (92% match)                     │
│    Role: RT Lead - Senior certification, equipment expert  │
│    ✓ RT Level II certified ✓ Equipment operation ✓ Available│
│                                                             │
│ 👤 Support Technician: Micheal E (85% match)               │
│    Role: RT Assistant - Strong technical skills, backup    │
│    ✓ RT Level I certified ✓ Safety certified ✓ Available   │
│                                                             │
│ Team Dynamics: Experienced lead with skilled support       │
│ Coordination: Nate leads setup, Micheal handles safety/QC  │
│                                                             │
│ Alternative Team Options:                                   │
│ • Solo Option: Nate N only (reduce to 1 tech if acceptable)│
│ • Different Pairing: tim T + Micheal E (backup combination)│
└─────────────────────────────────────────────────────────────┘
```

### Fix 4: Team Selection Logic

**Algorithm Enhancement**:

**For Single Tech Jobs (techs_needed = 1)**:
- Select highest-scoring individual technician
- Provide single recommendation with reasoning

**For Multi-Tech Jobs (techs_needed > 1)**:
- Identify primary technician (highest overall score)
- Select complementary team members based on:
  - Skill coverage (ensure all required certifications covered)
  - Experience distribution (mix senior/junior if available)
  - Availability overlap (all available on same dates)
  - Team chemistry considerations
- Assign roles: Lead, Specialist, Support
- Generate team coordination recommendations

**Team Selection Priorities**:
1. **Skill Coverage**: Team must cover all job requirements
2. **Experience Balance**: Prefer experienced lead with support
3. **Availability**: All members available for full job duration
4. **Certification Redundancy**: Multiple members with critical certs when possible
5. **Geographic Proximity**: Consider travel coordination

### Fix 5: Job Processing Integration

**File**: `server/routes.ts` - job matching endpoint

**Current Logic**: Passes job details to Claude service
**Enhanced Logic**: 
1. Extract `techsNeeded` from job data
2. Pass technician count requirement to Claude service
3. Validate team size matches job requirements
4. Format response for team display

**Validation Logic**:
```typescript
// Ensure team size matches job requirements
if (job.techsNeeded !== aiAnalysis.teamComposition.size) {
  logger.warn("Team size mismatch", {
    jobRequired: job.techsNeeded,
    teamSuggested: aiAnalysis.teamComposition.size
  });
  
  // Request Claude re-analysis with explicit count requirement
}
```

## Implementation Priority

### Phase 1: Claude Prompt Enhancement
1. Update Claude service to include technician count in analysis
2. Modify prompt to request team composition for multi-tech jobs
3. Test with various team size requirements (1, 2, 3+ techs)

### Phase 2: Response Structure Update
1. Update TypeScript interfaces for team-based responses
2. Modify API endpoint to handle team composition data
3. Ensure backward compatibility for single-tech recommendations

### Phase 3: Frontend Team Display
1. Update expandable row component to show team composition
2. Add role indicators and team coordination info
3. Enhance visual hierarchy for multi-member teams

### Phase 4: Testing & Validation
1. Test with jobs requiring different team sizes
2. Verify skill distribution logic across team members
3. Validate team recommendations make operational sense

## Expected Results

**Before**: "Job needs 2 techs" → Shows 1 technician recommendation (mismatch)
**After**: "Job needs 2 techs" → Shows 2-person team with roles and coordination plan

**Test Scenarios**:
- 1 tech visual inspection → Single technician recommendation
- 2 tech UT sweep → Lead + Support team with complementary skills
- 3 tech emergency RT → Lead + 2 specialists with equipment/safety roles

This fix ensures the staffing suggestions match the actual job requirements and provide actionable team composition guidance for complex multi-technician jobs.